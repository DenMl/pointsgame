#labels Phase-Implementation
=AI protocol, version 5=

The communication between the AI and the GUI interface is done via messages to *standart input* of the AI and messages from *standart output* of the AI. For example, if AI wants to say something, it must send a message to his standart output. The GUI then must capture this message and analyze it. If the GUI wants to say something, it sends a message to the standart input of the AI.

`AI -->>> AI output -->>> catched by GUI -->>> analyzed by GUI`

`GUI -->>> thrown in to AI input -->>> analyzed by AI`

==GUI -> AI message types:==

`list_commands` — request a space-separated list of known GUI->AI commands

`quit`  — request for the AI to exit

`boardsize X Y` — initialization. X - field width (number of crosses), Y - field height

`name` — request to return name of the AI, like "keij&kvanttt AI", "kropkiAI"

`version` — request to return version of the AI, like "1.2.1"

`play X Y Color` — play move. It's not a move to be answered, just place it. AI must return this move if it's Ok.

`genmove color complexity` — request to calculate an AI move and return it.

`reg_genmove color` — request to calculate an AI move, but do NOT make it on the field. The AI should reply with a "suggested move" message.

`reg_genmove_with_complexity color complexity` — request to calculate an AI move with the given complexity, but NOT to make it on the field. The AI should reply with a "suggested move" message. Complexity is a number from 0 to 100. The interpretation of this number lies on the AI.

`reg_genmove_with_time color time` — equest to calculate an AI move within the given time (milliseconds), but NOT to make it on the field. The AI should reply with a "suggested move" message.

`undo` — undo move.

`echo messagetext` — echoes the message. Send the received message back to the GUI with the "message" command. This can be needed for debugging purposes.

==AI -> GUI message types:==

`list_commands [command1 command2 ...]` — to send a space-separated list of known GUI->AI commands

`name` — to send the name of the AI, like "keij&kvanttt AI", "kropkiAI"

`version` — to send version of the AI, like "1.2.1"

`play X Y Color` — to send a played move to the GUI.

`reg_genmove X Y color` — to send a "suggested" move to the GUI. This "suggested" move is not played on the desk or kept in history, it is only calculated.

`message messagetext` — to send a message to the GUI.

===Explanations:===

  * X is a number from 0 to fieldSizeX - 1. For Y it's the same, of course.

  * color is a boolean value typed as "0" or "1".

  * in "echo" command, the message may contain spaces.

  * every message must end with the "end of line" sign (also known as "\n").

===Restrictions:===

  * when the AI is started it *must* print it's list of acceptable commands (list_commands).